/*
 * Web scale 101
 */

var Hook = require('../../lib/hookio').Hook;

var bench = require('benchmark');


var suite = new bench.Suite;

var hook = new Hook({
  name: "a"
});

var hook2 = new Hook({
  name: "b"
});

//hook.hooks = ['HelloWorld','HelloWorld','HelloWorld','HelloWorld','HelloWorld' ];

hook.on('hook::ready', function () {

   hook2.start();
   
   hook2.on('hook::ready', function(){

     var count = 0;
     hook2.once('*::sup', function(data, callback){
       for(var i = 0; i < 10000; i ++) {
         var x = 0;
       }
       count++;
       callback(count);
     });

     // add tests
     suite.add('RegExp#test', function() {
       /o/.test('Hello World!');
     })
     .add('Hook#emit', function() {
       hook.emit('sup', 'dog', function(result){
         return result;
       });
     })
     // add listeners
     .on('cycle', function(event, bench) {
       console.log(String(bench));
     })
     .on('complete', function() {
       console.log('Fastest is ' + this.filter('fastest').pluck('name'));
       console.log(count);
       
     })
     // run async
     .run({ 'async': true });

     // logs:
     // > RegExp#test x 4,161,532 +-0.99% (59 cycles)
     // > String#indexOf x 6,139,623 +-1.00% (131 cycles)
     // > Fastest is String#indexOf
     
   });

});

hook.start();
